spring.application.name=sb-ecom

#images folder configuration
project.image=images/

#start h2 DB
#Enable H2 Console for debugging
#spring.h2.console.enabled=true

#Database Configuration
#spring.datasource.url=jdbc:h2:mem:test
#end h2 DB

#start Mysql DB
#spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce
#spring.datasource.username=root
#spring.datasource.password=Monday@123

#Now what this means is update means hibernate will automatically update the database schema to match the entity mappings. So it adds the new columns and tables as necessary, but does not remove or alter the existing columns or tables.Okay, now this is useful in development environments to keep the schema in sync with your entity mappings without losing any data.Okay, there are different values that you can add instead of update.You can have create as well create drop.So all of that uh, different values are there.
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#? Prints SQL queries to the console.
#? Does not format them (queries are shown in a single line).
#spring.jpa.show-sql=true
#end Mysql DB

#start Postgres DB
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce
spring.datasource.username=postgres
spring.datasource.password=Monday@123

#Now what this means is update means hibernate will automatically update the database schema to match the entity mappings. So it adds the new columns and tables as necessary, but does not remove or alter the existing columns or tables.Okay, now this is useful in development environments to keep the schema in sync with your entity mappings without losing any data.Okay, there are different values that you can add instead of update.You can have create as well create drop.So all of that uh, different values are there.
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

#end Postgres DB


#jwt configurations
spring.app.jwtSecret=TheGreatIsComingThisIsA32ByteLongSecretKeyForJWT
spring.app.jwtExpirationMs=3000000
spring.ecom.app.jwtCookieName=springBootEcom

#logs to debug
#logging.level.org.springframework=DEBUG
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.springframework.security=DEBUG
logging.level.com.ecommerce.project=DEBUG

#start jpa
#? Prints SQL queries to the console.
#? Does not format them (queries are shown in a single line).
#spring.jpa.show-sql=true

#? Formats the SQL output for better readability.
#? Works only if spring.jpa.show-sql=true is set.
#spring.jpa.properties.hibernate.format_sql=true

#Controls how Hibernate handles database schema generation.
#create-drop is the default, other values are create,update,validate,none
#spring.jpa.hibernate.ddl-auto=create-drop
#end jpa